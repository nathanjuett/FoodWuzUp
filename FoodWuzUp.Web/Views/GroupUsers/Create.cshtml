@model FoodWuzUp.DAL.GroupUser

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>GroupUsers</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ParentID, "Group", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChildID, "User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<input id="tags" size="50" class="form-control">*@
                @Html.TextBoxFor(model => model.UserName, "User", htmlAttributes: new { @class = "form-control", @id = "tags", @size = "50" })
                @Html.HiddenFor(model => model.ChildID, htmlAttributes: new { @id = "childid" })
                @*@Html.DropDownList("ChildID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ChildID, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserTypeID, "User Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@Scripts.Render("~/bundles/jquery")

<script type="text/javascript">
    $(function () {

        $("#tags").autocomplete({
            source: ('@Url.Action("UserLookup")' + $("#tags")[0].value),
            minLength: 2,
            response: function (event, ui) {
                return ui.content;
            },
            select: function (event, ui) {
                var values = ui.item.label.split(',')
                $("#tags")[0].value = values[0];
                //$("#userid")[0].value = values[1];
            }
        });
        @*$("#tags").autocomplete({
            source: function (request, response) {
                $.get("@Url.Action("UserLookup")", {
                    query: request.term
                });
            },
            response: function (event, ui) {
                return ui.content;
            },
            minLength: 2
        });*@
    });

    @*function get (request, response) {
        $.get("@Url.Action("UserLookup")",{
            query: $("#tags")[0].value
        }).done(function (data) {
            return data;
        });
    };*@



</script>
@*<script>
            $('#tags').autocomplete('@Url.Action("UserLookup")', {
               dataType: 'json',
               parse: function (data) {
                   var rows = new Array();
                   for (var i = 0; i < data.length; i++) {
                       rows[i] = { data: data[i], value: data[i].Name, result: data[i].Name };
                   }
                   return rows;
               },
               formatItem: function (row) {
                   return row.Name;
               },
               delay: 40,
               autofill: true,
               selectFirst: false,
               highlight: false,
               multiple: true,
               multipleSeparator: ";"
           });
    </script>*@
