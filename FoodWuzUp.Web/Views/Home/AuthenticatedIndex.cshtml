@model FoodWuzUp.DAL.User

@{
    ViewBag.Title = "AuthenticatedIndex";
    List<FoodWuzUp.DAL.Restaurant> restaurants = ViewBag.Restaurants;
}

<div>
    <h2>@Model.Name</h2>
    @Html.DisplayFor(model => model.Description)
    <hr />
</div>

<div class="row">
    <div class="col-sm-6">
        <h3>My Groups</h3>
        <table class="table">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Description
                </th>
            </tr>

            @foreach (var item in Model.Groups)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Name, "Details", "Groups", new { id = item.ID }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                </tr>
            }
        </table>
        <p>
            <input type="button" value="Create" class="btn btn-default" id="groupCreate" />
        </p>

        <h3>My Memberships</h3>
        <table class="table">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Creator
                </th>
                <th>
                    Description
                </th>
            </tr>
            @foreach (var item in Model.Memberships)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Parent.Name, "Details", "Groups", new { id = item.ParentID }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Parent.Creator.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Parent.Description)
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-sm-6">
        <h3>My Resturants</h3>
        <table class="table">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Group
                </th>
                <th>
                    Description
                </th>
                <th>
                    Rating
                </th>
            </tr>
            @foreach (var item in restaurants)
            {
                <tr class="restaurantToolTip" title="" id="@item.ID" data-id=@item.ID>
                    <td>
                        @Html.ActionLink(item.Name, "Details", "Restaurants", new { id = item.ID }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modeItem => item.Group.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RatingString)
                    </td>
                </tr>
            }
        </table>
        <p>
            <input type="button" value="Create" class="btn btn-default" id="restaurantCreate" />
        </p>
    </div>
</div>

<div id="createGroupModal" title="Group Create" data-url='@Url.Action("CreateModal", "Groups")'></div>

<div id="createRestaurantModal" title="Restaurant Create" data-url='@Url.Action("CreateModal", "Restaurants")'></div>

<script type="text/javascript">
    $(function () {
        CreateModal('createGroupModal', 'groupCreate');
        CreateModal('createRestaurantModal', 'restaurantCreate');
    });
    var mouseLeaveTimer = 0;
    $('.restaurantToolTip').tooltip({
        content: function (callback) {
            var rid = $(this).data('id');
            $.ajax({
                url: '@Url.Action("DetailsToolTip", "Restaurants")',
                data: { id: rid },
                success: function (data) {
                    callback(data);
                }
            });
        },
        show: null,
        position: {
            my: "right center",
            at: "left top",
        },
        open: function (ev, ui) {
            if (typeof (ev.originalEvent) === 'undefined') {
                return false;
            }
            var $id = $(ui.tooltip).attr('id');
            $('div.ui-tooltip').not('#' + $id).remove();
        },
        close: function (ev, ui) {
            ui.tooltip.hover(function () {
                $(this).stop(true).fadeTo(400, 1);
            },
            function () {
                $(this).fadeOut('400', function () {
                    $(this).remove();
                });
            });
        }
    }).on('mouseleave', function (e, ui) {
        var that = this;
        // close the tooltip later (maybe ...)
        mouseLeaveTimer = setTimeout(function () {
            $(that).tooltip('close');
        }, 100);
        //prevent tooltip widget to close the tooltip now
        e.stopImmediatePropagation();
    });
    $(document).on('mouseenter', '.ui-tooltip', function (e) {
        // cancel tooltip closing on hover
        clearTimeout(mouseLeaveTimer);
    });
    $(document).on('mouseleave', '.ui-tooltip', function () {
        // make sure tooltip is closed when the mouse is gone
        $('.restaurantToolTip').tooltip('close');
    });
</script>